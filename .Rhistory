#Use this code chunk to download the NHANES 2017-2018 database and to label the nominal and ordinal variables as factor variables (if necessary):
NHANESdata <- read.csv("https://raw.githubusercontent.com/malenamalka/ANTH241-SP25/refs/heads/main/data/NHANES2017-28")
factor(c(NHANESdata$Gender, NHANESdata$Race, NHANESdata$HealthIns))
factor(c(NHANESdata$Education,NHANESdata$HHEducation,NHANESdata$HHIncome,NHANESdata$FeelBad,NHANESdata$HHFoodSec),order=TRUE)
factor(NHANESdata$BMIcat, order =TRUE, levels = c("Underweight","Healthy","Overweight","Obese"))
head(NHANESdata)
library(ggplot2)
library(tidyr)
library(dplyr)
#a. Bar chart for a nominal variable showing raw counts: Create the bar chart for BMI categories (BMIcat)
#ggplot (data, aes(x=Catvar)) + geom_bar() + labs(title="", x="", y="")
ggplot(NHANESdata, aes(x=BMIcat)) + geom_bar() + labs(title = "", x="", y="")
#a. Bar chart for a nominal variable showing raw counts: Create the bar chart for BMI categories (BMIcat)
#ggplot (data, aes(x=Catvar)) + geom_bar() + labs(title="", x="", y="")
ggplot(NHANESdata, aes(x=BMIcat)) + geom_bar(aes(fill = "red")) + labs(title = "", x="", y="")
#a. Bar chart for a nominal variable showing raw counts: Create the bar chart for BMI categories (BMIcat)
#ggplot (data, aes(x=Catvar)) + geom_bar() + labs(title="", x="", y="")
ggplot(NHANESdata, aes(x=BMIcat)) + geom_bar(fill = "red")) + labs(title = "", x="", y="")
#a. Bar chart for a nominal variable showing raw counts: Create the bar chart for BMI categories (BMIcat)
#ggplot (data, aes(x=Catvar)) + geom_bar() + labs(title="", x="", y="")
ggplot(NHANESdata, aes(x=BMIcat)) + geom_bar(fill = "red") + labs(title = "", x="", y="")
#a. Bar chart for a nominal variable showing raw counts: Create the bar chart for BMI categories (BMIcat)
#ggplot (data, aes(x=Catvar)) + geom_bar() + labs(title="", x="", y="")
ggplot(NHANESdata, aes(x=BMIcat)) + geom_bar(fill = "yellow") + labs(title = "", x="", y="")
#a. Bar chart for a nominal variable showing raw counts: Create the bar chart for BMI categories (BMIcat)
#ggplot (data, aes(x=Catvar)) + geom_bar() + labs(title="", x="", y="")
ggplot(NHANESdata, aes(x=BMIcat)) + geom_bar(fill = "purple") + labs(title = "", x="", y="")
#b. Bar chart showing BMI categories by percentages:
#new_table_name <- with(NHANESdata, table(BMIcat))
BMIcat_table <- with(NHANESdata, table(BMIcat))
#turn the above table into proportions: prop.table(new_table_name)
prop.table(BMIcat_table)
#turn the table into percentages: prop.table(new_table_name)*100
prop.table(BMIcat_table)*100
#new_data_frame <- as.data.frame(prop.table(new_table_name)*100
#ggplot(new_data_frame, aes(BMIcat, Freq)) + geom_col()
#b. Bar chart showing BMI categories by percentages:
#new_table_name <- with(NHANESdata, table(BMIcat))
BMIcat_table <- with(NHANESdata, table(BMIcat))
#turn the above table into proportions: prop.table(new_table_name)
prop.table(BMIcat_table)
#turn the table into percentages: prop.table(new_table_name)*100
prop.table(BMIcat_table)*100
#new_data_frame <- as.data.frame(prop.table(new_table_name)*100
BMIcat_barchart <- as.data.frame(prop.table(BMIcat_table))*100
#ggplot(new_data_frame, aes(BMIcat, Freq)) + geom_col()
#b. Bar chart showing BMI categories by percentages:
#new_table_name <- with(NHANESdata, table(BMIcat))
BMIcat_table <- with(NHANESdata, table(BMIcat))
#turn the above table into proportions: prop.table(new_table_name)
prop.table(BMIcat_table)
#turn the table into percentages: prop.table(new_table_name)*100
prop.table(BMIcat_table)*100
#new_data_frame <- as.data.frame(prop.table(new_table_name)*100
BMIcat_barchart <- as.data.frame(prop.table(BMIcat_table)*100)
#ggplot(new_data_frame, aes(BMIcat, Freq)) + geom_col()
#b. Bar chart showing BMI categories by percentages:
#new_table_name <- with(NHANESdata, table(BMIcat))
BMIcat_table <- with(NHANESdata, table(BMIcat))
#turn the above table into proportions: prop.table(new_table_name)
prop.table(BMIcat_table)
#turn the table into percentages: prop.table(new_table_name)*100
prop.table(BMIcat_table)*100
#new_data_frame <- as.data.frame(prop.table(new_table_name)*100
BMIcat_barchart <- as.data.frame(prop.table(BMIcat_table)*100)
#ggplot(new_data_frame, aes(BMIcat, Freq)) + geom_col()
ggplot(BMIcat_barchart, aes(BMIcat, Freq)) + geom_col()
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
table(NHANESdata$Gender, NHANESdata$BMIcat)
#Stacked bar chart:
#ggplot(data, aes(x=Independent variable, fill=Dependent variable)) + geom_bar(position = "stack") + labs(title="", x="", y="")
#grouped bar chart:
#ggplot(data, aes(x=Independent variable, fill=dependent variable)) + geom_bar(position = "dodge") + labs(title="", x="Gender", y="Frequency")
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
table(NHANESdata$Gender, NHANESdata$BMIcat)
#Stacked bar chart:
#ggplot(data, aes(x=Independent variable, fill=Dependent variable)) + geom_bar(position = "stack") + labs(title="", x="", y="")
ggplot(NHANESdata,aes(x=Gender, fill = BMIcat) ) + geom_bar(position = "stack") +labs(title = "", x = "", y="")
#grouped bar chart:
#ggplot(data, aes(x=Independent variable, fill=dependent variable)) + geom_bar(position = "dodge") + labs(title="", x="Gender", y="Frequency")
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
table(NHANESdata$Gender, NHANESdata$BMIcat)
#Stacked bar chart:
#ggplot(data, aes(x=Independent variable, fill=Dependent variable)) + geom_bar(position = "stack") + labs(title="", x="BMIcategories by gender", y="counts")
ggplot(NHANESdata,aes(x=Gender, fill = BMIcat) ) + geom_bar(position = "stack") +labs(title = "", x = "", y="")
#grouped bar chart:
#ggplot(data, aes(x=Independent variable, fill=dependent variable)) + geom_bar(position = "dodge") + labs(title="", x="Gender", y="Frequency")
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
drop_na(NHANESdata$BMIcat)
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
table(NHANESdata$Gender, NHANESdata$BMIcat)
#Stacked bar chart:
#ggplot(data, aes(x=Independent variable, fill=Dependent variable)) + geom_bar(position = "stack") + labs(title="", x="BMIcategories by gender", y="counts")
ggplot(NHANESdata,aes(x=Gender, fill = BMIcat) ) + geom_bar(position = "stack") +labs(title = "", x = "", y="")
#grouped bar chart:
#ggplot(data, aes(x=Independent variable, fill=dependent variable)) + geom_bar(position = "dodge") + labs(title="", x="Gender", y="Frequency")
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
table(NHANESdata$Gender, NHANESdata$BMIcat)
#Stacked bar chart:
#ggplot(data, aes(x=Independent variable, fill=Dependent variable)) + geom_bar(position = "stack") + labs(title="", x="BMIcategories by gender", y="counts")
ggplot(NHANESdata,aes(x=BMIcat, fill = Gender) ) + geom_bar(position = "stack") +labs(title = "", x = "", y="")
#grouped bar chart:
#ggplot(data, aes(x=Independent variable, fill=dependent variable)) + geom_bar(position = "dodge") + labs(title="", x="Gender", y="Frequency")
#BMI_cats by gender: stacked, grouped and filled bar charts:
#table(data$Independent variable, data$Dependent variable)
table(NHANESdata$Gender, NHANESdata$BMIcat)
#Stacked bar chart:
#ggplot(data, aes(x=Independent variable, fill=Dependent variable)) + geom_bar(position = "stack") + labs(title="", x="BMIcategories by gender", y="counts")
ggplot(NHANESdata,aes(x=BMIcat, fill = Gender) ) + geom_bar(position = "stack") +labs(title = "", x = "", y="")
#grouped bar chart:
#ggplot(data, aes(x=Independent variable, fill=dependent variable)) + geom_bar(position = "dodge") + labs(title="", x="Gender", y="Frequency")
ggplot(NHANESdata, aes(x=BMIcat, fill = Gender)) + geom_bar(position = "dodge") + labs(title = "", x="Gender", y="Frequency")
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender)
summarize(n=n(), mean=mean(BMI), sd=sd(BMI))
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender)
summarize(n=n(), mean=mean(BMI), sd=sd(BMI))
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender)
summarize(n=n(), mean=mean(BMI), sd=sd(BMI))
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender)
summarize(n(), mean=mean(BMI), sd=sd(BMI))
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender)
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender) %>%
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
BMI_gender
#2 Plot means in a sorted bar chart and adds error bars that represent the standard deviation
#ggplot(new_data_frame, aes(x=reorder(Independent variable, mean), y=mean)) + geom_bar(stat="identity", fill="color") + geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.2)
#labs(x="", y="", title="", subtitle="")
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender) %>%
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
BMI_gender
#2 Plot means in a sorted bar chart and adds error bars that represent the standard deviation
#ggplot(new_data_frame, aes(x=reorder(Independent variable, mean), y=mean)) + geom_bar(stat="identity", fill="color") + geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.2)
#labs(x="", y="", title="", subtitle="")
ggplot(BMI_gender, aes(x=reorder(gender, mean), y=mean)) + geom_bar(stat = "identity", fill="color") + geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), width=0.2)
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender) %>%
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
BMI_gender
#2 Plot means in a sorted bar chart and adds error bars that represent the standard deviation
#ggplot(new_data_frame, aes(x=reorder(Independent variable, mean), y=mean)) + geom_bar(stat="identity", fill="color") + geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.2)
#labs(x="", y="", title="", subtitle="")
ggplot(BMI_gender, aes(x=reorder(Gender, mean), y=mean)) + geom_bar(stat = "identity", fill="color") + geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), width=0.2)
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender) %>%
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
BMI_gender
#2 Plot means in a sorted bar chart and adds error bars that represent the standard deviation
#ggplot(new_data_frame, aes(x=reorder(Independent variable, mean), y=mean)) + geom_bar(stat="identity", fill="color") + geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.2)
#labs(x="", y="", title="", subtitle="")
ggplot(BMI_gender, aes(x=reorder(Gender, mean), y=mean)) + geom_bar(stat = "identity", fill="blue") + geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), width=0.2)
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender) %>%
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
BMI_gender
#2 Plot means in a sorted bar chart and adds error bars that represent the standard deviation
#ggplot(new_data_frame, aes(x=reorder(Independent variable, mean), y=mean)) + geom_bar(stat="identity", fill="color") + geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.2)
#labs(x="", y="", title="", subtitle="")
ggplot(BMI_gender, aes(x=reorder(Gender, mean), y=mean)) + geom_bar(stat = "identity", fill="blue") + geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), width=0.2)
labs(x="",y="", title = "", subtitle = "")
#1 generate means and standard deviation of BMI(dependent var.) by gender (independent var)
#new_data_frame <- data%>%
#drop_na(Dependent variable)%>%
#group_by(Independent variable)
#summarize(n=n(), mean=mean(dependent variable), sd=sd(dependent variable))
#to print new data frame: new_data_frame
BMI_gender <- NHANESdata %>%
drop_na(BMI) %>%
group_by(Gender) %>%
summarize(count = n(), mean=mean(BMI), sd=sd(BMI))
BMI_gender
#2 Plot means in a sorted bar chart and adds error bars that represent the standard deviation
#ggplot(new_data_frame, aes(x=reorder(Independent variable, mean), y=mean)) + geom_bar(stat="identity", fill="color") + geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.2)
#labs(x="", y="", title="", subtitle="")
ggplot(BMI_gender, aes(x=reorder(Gender, mean), y=mean)) + geom_bar(stat = "identity", fill="blue") + geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), width=0.2)
labs(x="gender",y="", title = "Mean BMI", subtitle = "with standard deviation")
#a. simple histogram: ggplot(data, aes(x=contvar)) + geom_histogram() + labs(title="", x="", y="")
#construct a histogram for BMI:
ggplot(NHANESdata, aes(x=contvar)) + geom_histogram() + labs(title = "", x="", y="")
#a. simple histogram: ggplot(data, aes(x=contvar)) + geom_histogram() + labs(title="", x="", y="")
#construct a histogram for BMI:
ggplot(NHANESdata, aes(x=BMI)) + geom_histogram() + labs(title = "", x="", y="")
#a. simple histogram: ggplot(data, aes(x=contvar)) + geom_histogram() + labs(title="", x="", y="")
#construct a histogram for BMI:
ggplot(NHANESdata, aes(x=BMI)) +
geom_histogram() +
labs(title = "", x="", y="")
#a. simple histogram: ggplot(data, aes(x=contvar)) + geom_histogram() + labs(title="", x="", y="")
#construct a histogram for BMI:
ggplot(NHANESdata, aes(x=BMI)) +
geom_histogram() +
labs(title = "histogram of BMI", x="", y="")
#b. colored histogram with 20 bins: ggplot(data, aes(x=contvar)) + geom_histogram(bins=20, color="white", fill="steelblue") + labs(title="Colored histogram with 20 bins", x="", y="")
#do the above code for BMI:
ggplot(NHANESdata, aes(x=BMI))+
geom_histogram(bins = 20, color="white",fill="steelblue")+
labs(title = "colored histogram with 20 bines", x="", y="")
#b. colored histogram with 20 bins: ggplot(data, aes(x=contvar)) + geom_histogram(bins=20, color="white", fill="steelblue") + labs(title="Colored histogram with 20 bins", x="", y="")
#do the above code for BMI:
ggplot(NHANESdata, aes(x=BMI))+
geom_histogram(bins = 20, color="white",fill="steelblue")+
labs(title = "colored histogram with 20 bins", x="", y="")
#b. colored histogram with 20 bins: ggplot(data, aes(x=contvar)) + geom_histogram(bins=20, color="white", fill="steelblue") + labs(title="Colored histogram with 20 bins", x="", y="")
#do the above code for BMI:
ggplot(NHANESdata, aes(x=BMI))+
geom_histogram(bins = 30, color="white",fill="steelblue")+
labs(title = "colored histogram with 20 bins", x="", y="")
#b. colored histogram with 20 bins: ggplot(data, aes(x=contvar)) + geom_histogram(bins=20, color="white", fill="steelblue") + labs(title="Colored histogram with 20 bins", x="", y="")
#do the above code for BMI:
ggplot(NHANESdata, aes(x=BMI))+
geom_histogram(bins = 20, color="white",fill="steelblue")+
labs(title = "colored histogram with 20 bins", x="", y="")
